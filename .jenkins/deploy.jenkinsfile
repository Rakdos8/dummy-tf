@Library('iceve-library@aws-terraform')

import space.iceve.CloudConfig

// Pipeline parameters
final CloudConfig cloudCfg = CloudConfig.ICEVE
final String repository = 'git@github.com:Rakdos8/dummy-tf.git'
final String branch = 'master'
// End of parameters

properties([
		disableConcurrentBuilds(),
		// Only keep 10 builds in memory (avoid to use extra disk space)
		buildDiscarder(logRotator(numToKeepStr: '10'))
])

// Create infrastructure in AWS
String publicIp = ''
terraformContext(cloudCfg, {
	gitCheckout(repository, branch)

	dir('terraform/aws/eu-west-3') {
		terraformApply(cloudCfg, true)
		// Retrieve public IP address from TF output
		container(cloudCfg.terraform) {
			withAWS(credentials: 'aws-root-key') {
				publicIp = sh(returnStdout: true, script: 'terraform output dummy_public_ip').trim()
			}
		}
	}
})

ansibleContext(cloudCfg, {
	gitCheckout(repository, branch)

	dir('ansible') {
		ansibleRequirements(cloudCfg, 'playbooks/roles/requirements.yml')
		ansiblePlay(
				cloudCfg,
				'playbooks/init-stack.yml',
				'localhost,',
				'aws-std-key',
				[
						'"instance_ip=' + publicIp + '"'
				]
		)
	}
})
